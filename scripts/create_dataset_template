#!/bin/bash

dataset_name=$1
dataset_path=/niddff/datasets/${dataset_name}

if [ -d ${dataset_path} ]; then
    rm -rf ${dataset_path}
fi

###
# Setup directory structure and empty files
###

mkdir -p ${dataset_path}
mkdir -p ${dataset_path}/source_data
mkdir -p ${dataset_path}/ground_truth

mkdir -p ${dataset_path}/step_acquire_source_data
touch ${dataset_path}/step_acquire_source_data/__load__.argus
touch ${dataset_path}/step_acquire_source_data/__load__.python
touch ${dataset_path}/step_acquire_source_data/__load__.zeek

mkdir -p ${dataset_path}/step_feature_processing
touch ${dataset_path}/step_feature_processing/__load__.argus
touch ${dataset_path}/step_feature_processing/__load__.python
touch ${dataset_path}/step_feature_processing/__load__.zeek

mkdir -p ${dataset_path}/step_label_processing
touch ${dataset_path}/step_label_processing/__load__.argus
touch ${dataset_path}/step_label_processing/__load__.python
touch ${dataset_path}/step_label_processing/__load__.zeek

mkdir -p ${dataset_path}/step_post_processing
touch ${dataset_path}/step_post_processing/__load__.argus
touch ${dataset_path}/step_post_processing/__load__.python
touch ${dataset_path}/step_post_processing/__load__.zeek

mkdir -p ${dataset_path}/step_final_dataset_processing
touch ${dataset_path}/step_final_dataset_processing/__load__.argus
touch ${dataset_path}/step_final_dataset_processing/__load__.python
touch ${dataset_path}/step_final_dataset_processing/__load__.zeek

###
# Populate a template config.yaml file
###

cat > ${dataset_path}/config.yaml <<'EOF'
documentation:
  niddff: niddff/niddff:0.1

setup_options:
  dataset_name: <DATASET NAME>
  source_data: <SOURCE DATA>
  ground_truth_data: <GROUND TRUTH DATA>
  clean_output_directory: True
  expected_outputs:
    - <EXPECTED OUTPUT FILE>

  argus:
    clean: True
    arguments: -S 60 -m
    execute_ra: True

step_acquire_source_data:
  download: True

###
# The following items occur in a loop:
# - step_feature_processing
# - step_label_processing
# - step_post_processing
###

step_feature_processing:
  - run_zeek
  - run_argus
  - run_python_scripts {output_directory}/{source_file_name}.zeek.features.csv

step_label_processing:
  - run_python_scripts {output_directory}/{source_file_name}.zeek.features.csv

step_post_processing:
  - run_combine_features <EXPECTED OUTPUT FILE>

###
# Final dataset processing which produces
# all expected_outputs from setup_options section
# Tasks such as combining all intermediate outputs would occur here.
###

step_final_dataset_processing:
  - run_combine_data <EXPECTED OUTPUT FILE>
EOF
